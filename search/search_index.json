{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Urbanize","text":"<p>Bem-vindo ao Urbanize, um projeto desenvolvido na disciplina de M\u00e9todos de Desenvolvimento de Software (MDS) do curso de Engenharia de Software da Universidade de Bras\u00edlia (UnB). Este projeto visa em fazer o mapeamento e consolida\u00e7\u00e3o de dados sobre obras e servi\u00e7os p\u00fablicos do DF, utilizando informa\u00e7\u00f5es extra\u00eddas do ObrasGov</p>"},{"location":"#motivacao","title":"Motiva\u00e7\u00e3o","text":"<p>O projeto Urbanize nasce da necessidade de promover transpar\u00eancia e acessibilidade \u00e0 informa\u00e7\u00e3o sobre obras e servi\u00e7os p\u00fablicos do Distrito Federal (DF). Ao centralizar e consolidar dados sobre interven\u00e7\u00f5es urbanas, buscamos fornecer \u00e0 popula\u00e7\u00e3o e aos gestores p\u00fablicos uma vis\u00e3o clara e atualizada das iniciativas em andamento, facilitando o acompanhamento de prazos, etapas de execu\u00e7\u00e3o e impacto das obras.</p>"},{"location":"#objetivo","title":"Objetivo","text":"<p>O Urbanize tem como objetivos principais:</p> <ul> <li>Desenvolver um mapa interativo de obras p\u00fablicas: Criar uma interface visual que permita aos usu\u00e1rios explorar de forma intuitiva e din\u00e2mica as diversas obras e servi\u00e7os p\u00fablicos em andamento no</li> <li>Implementar ferramentas de pesquisa e filtragem avan\u00e7adas: Permitir que os usu\u00e1rios busquem e filtrem obras p\u00fablicas no mapa com base em crit\u00e9rios espec\u00edficos, como o \u00f3rg\u00e3o solicitante, status da obra, localidade e data de in\u00edcio, facilitando o acesso r\u00e1pido a informa\u00e7\u00f5es relevantes.</li> <li>Oferecer visualiza\u00e7\u00e3o detalhada de dados e informa\u00e7\u00f5es sobre as obras: Exibir dados detalhados de cada obra, como cronograma, or\u00e7amento, respons\u00e1veis e impacto esperado, promovendo a transpar\u00eancia e o entendimento completo de cada projeto urbano.</li> </ul>"},{"location":"#principais-funcionalidades","title":"Principais Funcionalidades","text":"<ul> <li>Coleta e Atualiza\u00e7\u00e3o de Dados: Extra\u00e7\u00e3o de informa\u00e7\u00f5es do Censo de Obras usando API's.</li> <li>Processamento de Dados: Realiza\u00e7\u00e3o de an\u00e1lises descritivas automatizadas para processar e interpretar os dados.</li> <li>Confiabilidade dos Dados: Implementa\u00e7\u00e3o de valida\u00e7\u00f5es e tratamento de erros para garantir a precis\u00e3o e integridade dos dados coletados.</li> <li>Visualiza\u00e7\u00e3o de Dados: Desenvolvimento de uma interface intuitiva e responsiva para a apresenta\u00e7\u00e3o mapeada, facilitando a an\u00e1lise e interpreta\u00e7\u00e3o.</li> <li>Pesquisa Avan\u00e7ada: Funcionalidades de busca e filtragem detalhada por in\u00edcio e t\u00e9rmino, gastos e andamento da obra, permitindo consultas espec\u00edficas e personalizadas.</li> <li>Rastreamento de anomalias: Identifica\u00e7\u00e3o e sinaliza\u00e7\u00e3o de irregularidades, como atrasos nas obras ou gastos superiores ao or\u00e7amento previsto.</li> </ul>"},{"location":"about/","title":"Sobre","text":""},{"location":"about/#sobre-os-integrantes","title":"Sobre os integrantes","text":"<p>Gabriel: estudante back-end e front-end.</p> <p>Leo Lima: estudante e entusiasta de tecnologias front-end.</p> <p>Vitor Bessa: estudante de Engenharia de Software e apaixonado por programa\u00e7\u00e3o.</p> <p>Mateus Bastos: estudante de Engenharia de Software entusiasta da programa\u00e7\u00e3o procedural.</p> <p>Fernanda Vaz: estudante e entusiasta de Engenharia de Software.</p> <p>Angelica Campos: estudante e desenvolvedora entusiasta do universo JavaScript.</p> <p> Gabriel Lima Leo Lima Vitor Bessa Mateus Bastos Fernanda Vaz Angelica Campos <p></p>"},{"location":"padronizacaoGit/","title":"Git","text":""},{"location":"padronizacaoGit/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento tem o objetivo de consolidar padr\u00f5es de uso do Git no desenvolvimento da aplica\u00e7\u00e3o. Neste projeto usaremos uma adapta\u00e7\u00e3o do padr\u00e3o git flow. Este conceito tem seu fundamento na organiza\u00e7\u00e3o de reposit\u00f3rios, atribuindo pol\u00edticas de uso e restri\u00e7\u00f5es de seguran\u00e7a, sempre com o objetivo de cumprir com as pr\u00e1ticas mais adequadas, observadas e aperfei\u00e7oadas ao longo do tempo. Nota-se que o idioma que se seguir\u00e1 na pol\u00edtica de constribui\u00e7\u00e3o \u00e9 o portugu\u00eas.</p>"},{"location":"padronizacaoGit/#fluxo-de-branches","title":"Fluxo de Branches","text":"<p>Para garantir um fluxo de trabalho cont\u00ednuo e de forma padronizada, possibilitando o rastreamento das funcionalidades desenvolvidas e facilitando o desenvolvimento cont\u00ednuo. Os conceitos-chave para implementa\u00e7\u00e3o da estrat\u00e9gia ser\u00e3o:</p> <ul> <li>Main: Branch de produ\u00e7\u00e3o, respons\u00e1vel por abrigar o c\u00f3digo da \u00faltima release.</li> <li>Feature: Branch de desenvolvimento de funcionalidade, representa a branch de trabalho sob uma determinada funcionalidade, tarefa, corre\u00e7\u00e3o de bugs e afins.</li> </ul> <p>\u00c9 importante que a branch de funcionalidade seja criada seguindo o padr\u00e3o:</p> <ul> <li>feat#(n\u00famero-da-issue)/(US)-(nome-da-issue)</li> <li>Exemplo: feat#74/US05-Login</li> </ul> <p>Ela deve ser criada a partir da branch de produ\u00e7\u00e3o Main.</p> <p>A branch de corre\u00e7\u00e3o deve ser criada no padr\u00e3o:</p> <ul> <li>fix#(n\u00famero-da-issue)/(nome-da-issue)</li> <li>Exemplo: fix#74/US05-Login</li> </ul> <p>Ela deve originar-se da branch que apresentou o erro.</p>"},{"location":"padronizacaoGit/#commits","title":"Commits","text":"<p>As informa\u00e7\u00f5es abaixo referem-se aos padr\u00f5es de escrita de commits do nosso reposit\u00f3rio:</p> <ol> <li>Sempre dividir o trabalho em pequenos e significativos commits, de maneira que cada commit implemente apenas uma funcionalidade.</li> <li>A anatomia do commit deve seguir o formato determinado abaixo:</li> </ol> <p>tipo: assunto </p> <p>As op\u00e7\u00f5es permitidas para o campo tipo s\u00e3o:</p> <ul> <li>feat: nova funcionalidade</li> <li>docs: relacionado \u00e0 documenta\u00e7\u00e3o</li> <li>refact: refatora\u00e7\u00e3o de c\u00f3digo</li> <li>fix: corre\u00e7\u00f5es</li> </ul> <p>As op\u00e7\u00f5es permitidas para o campo tipo s\u00e3o:</p> <ul> <li>Mensagem curta e sucinta</li> <li>Todo texto deve estar sempre em letras min\u00fasculas</li> <li>Deve conter o que</li> </ul> <p>Exemplo de commit: </p> <p>refact: ajustando p\u00e1gina de login  </p>"},{"location":"padronizacaoGit/#pull-request","title":"Pull Request","text":"<p>Por meio do processo de pull request, realizado no GitHub, toda nova funcionalidade deve ser integrada \u00e0 branch Main. Mas isso semente ser\u00e1 feito ap\u00f3s todos os crit\u00e9rios de sucesso para a feature estarem atendidos.</p>"},{"location":"padronizacaoIssues/","title":"Issues","text":""},{"location":"padronizacaoIssues/#estrutura-da-issue","title":"Estrutura da Issue","text":""},{"location":"padronizacaoIssues/#titulo-da-issue","title":"T\u00edtulo da Issue","text":"<p>Use um t\u00edtulo claro e descritivo. Formato sugerido: - <code>[BUG] Descri\u00e7\u00e3o curta do problema</code> - <code>[FEATURE] Nome da funcionalidade</code> - <code>[DOC] Atualiza\u00e7\u00e3o/Cria\u00e7\u00e3o de documenta\u00e7\u00e3o</code> </p>"},{"location":"padronizacaoIssues/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Preencha os seguintes campos para descrever a issue:</p>"},{"location":"padronizacaoIssues/#resumo","title":"Resumo","text":"<p>Breve descri\u00e7\u00e3o da issue.</p>"},{"location":"padronizacaoIssues/#contexto","title":"Contexto","text":"<ul> <li>Explique o problema ou a necessidade.  </li> <li>Inclua links ou refer\u00eancias relevantes, se houver.  </li> </ul>"},{"location":"padronizacaoIssues/#criterios-de-aceitacao","title":"Crit\u00e9rios de Aceita\u00e7\u00e3o","text":"<p>Liste os requisitos necess\u00e1rios para que a issue seja considerada resolvida. Exemplo: - O bot\u00e3o X est\u00e1 funcionando conforme o esperado. - O endpoint retorna os dados corretamente.  </p>"},{"location":"padronizacaoIssues/#tarefas","title":"Tarefas","text":"<p>Liste as etapas necess\u00e1rias para completar a issue: 1. Etapa 1 2. Etapa 2 3. Etapa 3  </p>"},{"location":"padronizacaoIssues/#prioridade","title":"Prioridade","text":"<p>Indique a prioridade da issue: - Alta: Impacta diretamente o funcionamento principal do sistema. - M\u00e9dia: Importante, mas n\u00e3o impede o progresso do projeto. - Baixa: Melhorias ou ajustes est\u00e9ticos.  </p>"},{"location":"padronizacaoIssues/#anexos","title":"Anexos","text":"<p>Inclua imagens, logs ou exemplos de c\u00f3digo, se necess\u00e1rio.</p>"},{"location":"padronizacaoIssues/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Mantenha as issues objetivas e claras.  </li> <li>Atualize a issue \u00e0 medida que houver progresso.  </li> <li>Adicione etiquetas (<code>bug</code>, <code>feature</code>, <code>documentation</code>, etc.) para facilitar a categoriza\u00e7\u00e3o.  </li> <li>Associe a issue a um milestone ou projeto, se aplic\u00e1vel.  </li> </ul>"},{"location":"padronizacaoIssues/#exemplo-de-issue-preenchida","title":"Exemplo de Issue Preenchida","text":""},{"location":"padronizacaoIssues/#titulo","title":"T\u00edtulo","text":"<p><code>[BUG] Erro ao carregar o mapa interativo</code></p>"},{"location":"padronizacaoIssues/#descricao_1","title":"Descri\u00e7\u00e3o","text":""},{"location":"padronizacaoIssues/#resumo_1","title":"Resumo","text":"<p>O mapa interativo n\u00e3o est\u00e1 carregando ao acessar a p\u00e1gina inicial.</p>"},{"location":"padronizacaoIssues/#contexto_1","title":"Contexto","text":"<ul> <li>O problema ocorre em todas as sess\u00f5es de usu\u00e1rio ao usar navegadores baseados em Chromium.  </li> <li>Logs de erro no console indicam falha na comunica\u00e7\u00e3o com o endpoint <code>/api/map</code>.  </li> </ul>"},{"location":"padronizacaoIssues/#criterios-de-aceitacao_1","title":"Crit\u00e9rios de Aceita\u00e7\u00e3o","text":"<ul> <li>O mapa carrega corretamente em navegadores compat\u00edveis.  </li> <li>Logs de erro s\u00e3o tratados adequadamente.  </li> </ul>"},{"location":"padronizacaoIssues/#tarefas_1","title":"Tarefas","text":"<ol> <li>Investigar o erro no endpoint <code>/api/map</code>.  </li> <li>Corrigir a falha de comunica\u00e7\u00e3o.  </li> <li>Validar o funcionamento em diferentes navegadores.  </li> </ol>"},{"location":"padronizacaoIssues/#prioridade_1","title":"Prioridade","text":"<p>Alta</p>"},{"location":"padronizacaoIssues/#anexos_1","title":"Anexos","text":"<ul> <li>Captura de tela do erro no console.  </li> <li>Logs detalhados do servidor.  </li> </ul> <p>Seguindo este padr\u00e3o, garantimos a consist\u00eancia e a produtividade no gerenciamento das issues do projeto Urbanize.</p>"},{"location":"projects/arquitetura/","title":"Arquitetura e Tecnologias","text":"<p>O Urbanize \u00e9 constitu\u00eddo de cinco componentes principais:</p> <ul> <li> <p>Frontend: Respons\u00e1vel pela interface de usu\u00e1rio, onde os usu\u00e1rios interagem com o sistema. Ele exibe os dados de maneira clara e acess\u00edvel, permitindo que os usu\u00e1rios fa\u00e7am pesquisas e visualizem gr\u00e1ficos e an\u00e1lises.</p> </li> <li> <p>Backend/API: Gerencia a l\u00f3gica de neg\u00f3cios e atua como intermedi\u00e1rio entre o frontend e o banco de dados. Ele processa as solicita\u00e7\u00f5es dos usu\u00e1rios, executa as regras de neg\u00f3cio e retorna os dados apropriados para o frontend.</p> </li> <li> <p>Banco de Dados: Armazena e organiza os dados necess\u00e1rios para o funcionamento do Urbanize. \u00c9 o reposit\u00f3rio central onde todos os dados coletados, processados e organizados s\u00e3o mantidos para acesso e consulta.</p> </li> </ul> <p>Arquitetura do Urbanize</p> <p>Para fornecer uma vis\u00e3o clara de como esses componentes interagem e se integram no sistema, o diagrama abaixo ilustra a arquitetura geral do Urbanize. Nele, \u00e9 poss\u00edvel visualizar o fluxo de dados e a rela\u00e7\u00e3o entre cada um dos componentes descritos acima, desde a coleta de dados no SODF at\u00e9 a apresenta\u00e7\u00e3o dos resultados para o usu\u00e1rio final.</p> <p>Descri\u00e7\u00e3o dos componentes</p> <p>A seguir, apresentamos uma vis\u00e3o detalhada de cada componente do Urbanize. As escolhas tecnol\u00f3gicas feitas para cada parte do sistema refletem o compromisso da equipe de desenvolvimento em utilizar solu\u00e7\u00f5es modernas e eficientes, assegurando robustez e facilidade de manuten\u00e7\u00e3o.</p>"},{"location":"projects/arquitetura/#frontend","title":"Frontend","text":"<p>O frontend \u00e9 interface visual do Urbanize, composto por tr\u00eas p\u00e1ginas principais, organiza em gr\u00e1ficos os dados coletados.</p> <p>Tecnologias utilizadas:</p> <ul> <li>Next.js: Framework React para renderiza\u00e7\u00e3o no lado do servidor (SSR) e gera\u00e7\u00e3o de sites est\u00e1ticos, proporcionando uma performance melhorada e SEO otimizado.</li> <li>Tailwind CSS: Framework de utilit\u00e1rios CSS que permite um design responsivo e customiz\u00e1vel.</li> <li>TypeScript: Linguagem que adiciona tipagem est\u00e1tica ao JavaScript, aumentando seguran\u00e7a e previsibilidade do c\u00f3digo.</li> <li>Axios: Biblioteca para requisi\u00e7\u00f5es HTTP, estabelecendo a comunica\u00e7\u00e3o com a API.</li> <li>Vitest: Ferramenta de testes unit\u00e1rios JavaScript, permitindo a execu\u00e7\u00e3o r\u00e1pida e eficiente dos testes.</li> <li>Testing Library: Conjunto de utilit\u00e1rios que possibilita renderizar os componentes em ambiente de teste.</li> <li>ESLint: Ferramenta de linting que identifica e corrige problemas de estilo e padr\u00f5es no c\u00f3digo, garantindo a qualidade e consist\u00eancia.</li> <li>Sonner: Biblioteca para exibi\u00e7\u00e3o de notifica\u00e7\u00f5es na interface, tornando mensagens de erro e alertas amig\u00e1veis.</li> <li>ApexCharts: Biblioteca para cria\u00e7\u00e3o de gr\u00e1ficos interativos e visualiza\u00e7\u00f5es de dados, proporcionando uma apresenta\u00e7\u00e3o rica e personaliz\u00e1vel das informa\u00e7\u00f5es.</li> </ul>"},{"location":"projects/arquitetura/#backendapi","title":"Backend/API","text":"<p>O backend/API \u00e9 respons\u00e1vel pela busca, regras de neg\u00f3cio e tratamento dos dados. Para maior robustez e facilidade de manuten\u00e7\u00e3o, a API foi estruturada seguindo os princ\u00edpios da Clean Architecture, dividida em tr\u00eas camadas principais:</p> <ul> <li> <p>Infrastructure: Esta camada cont\u00e9m os elementos de infraestrutura necess\u00e1rios para a execu\u00e7\u00e3o do sistema, incluindo a configura\u00e7\u00e3o do servidor, a conex\u00e3o com o banco de dados, e a implementa\u00e7\u00e3o dos servi\u00e7os externos. Ela lida com as opera\u00e7\u00f5es mais pr\u00f3ximas ao sistema operacional e ao ambiente de execu\u00e7\u00e3o.</p> </li> <li> <p>Adapters: Os adaptadores s\u00e3o respons\u00e1veis por fazer a ponte entre o mundo externo e o n\u00facleo da aplica\u00e7\u00e3o. Eles transformam as entradas e sa\u00eddas, adaptando-as para serem compreendidas pela camada de aplica\u00e7\u00e3o. Incluem controllers que recebem as requisi\u00e7\u00f5es HTTP e reposit\u00f3rios que abstraem o acesso ao banco de dados.</p> </li> <li> <p>Application: Esta camada cont\u00e9m a l\u00f3gica de neg\u00f3cio central do sistema. Ela orquestra as opera\u00e7\u00f5es, aplica as regras de neg\u00f3cio e interage com as outras camadas atrav\u00e9s de interfaces definidas. O foco \u00e9 garantir que as regras de neg\u00f3cio sejam cumpridas de maneira consistente e independente da tecnologia usada nas outras camadas. No Urbanize, inclui os services.</p> </li> </ul> <p>Tecnologias utilizadas:</p> <ul> <li>Express: Framework para constru\u00e7\u00e3o de APIs e servidores web em Node.js, facilitando a cria\u00e7\u00e3o e gerenciamento de rotas.</li> <li>Vitest: Ferramenta de testes unit\u00e1rios JavaScript, permitindo a execu\u00e7\u00e3o r\u00e1pida e eficiente dos testes.</li> <li>TypeScript: Linguagem que adiciona tipagem est\u00e1tica ao JavaScript, aumentando seguran\u00e7a e previsibilidade do c\u00f3digo.</li> <li>Nodemon: Ferramenta que reinicia automaticamente o servidor Node.js quando mudan\u00e7as s\u00e3o detectadas, agilizando o desenvolvimento.</li> <li>ESLint: Ferramenta de linting que identifica e corrige problemas de estilo e padr\u00f5es no c\u00f3digo, garantindo a qualidade e consist\u00eancia.</li> <li>Swagger: Ferramenta para documenta\u00e7\u00e3o interativa de APIs, permitindo a explora\u00e7\u00e3o e testes das rotas da API.</li> </ul>"},{"location":"projects/arquitetura/#api","title":"API","text":"<p>Uma API (Application Programming Interface, ou Interface de Programa\u00e7\u00e3o de Aplica\u00e7\u00f5es) \u00e9 um conjunto de defini\u00e7\u00f5es e protocolos que permite que diferentes sistemas ou softwares se comuniquem entre si de maneira estruturada e padronizada..</p> <p>Tecnologias Utilizadas:</p> <ul> <li>Axios: \u00e9 uma biblioteca JavaScript usada para fazer requisi\u00e7\u00f5es HTTP de maneira simples e eficiente. Ela funciona tanto em navegadores quanto em ambientes Node.js, permitindo que voc\u00ea se conecte a APIs ou servidores, envie dados e receba respostas.</li> </ul> <p>A fonte dos dados extra\u00eddos pelo api: Obrasgov</p>"},{"location":"projects/arquitetura/#banco-de-dados","title":"Banco de Dados","text":"<p>O banco de dados armazena de forma din\u00e2mica e inteligente todos os dados necess\u00e1rios para abastecer o Urbanize. Ele \u00e9 o reposit\u00f3rio central onde os dados coletados e processados s\u00e3o mantidos, garantindo que estejam acess\u00edveis e organizados para consultas e an\u00e1lises.</p> <p>Veja sua modelagem:</p> <p>Tecnologias Utilizadas:</p> <ul> <li>PostgreSQL: Sistema de gerenciamento de banco de dados relacional de c\u00f3digo aberto, usado para armazenar e gerenciar os dados de forma eficiente e segura. Ele oferece suporte a opera\u00e7\u00f5es complexas e \u00e9 altamente escal\u00e1vel, adequado para o volume e a complexidade dos dados no Urbanize.</li> </ul>"},{"location":"projects/arquitetura/#inicio","title":"In\u00edcio","text":"<p>Siga os passos abaixo para executar o backend do Urbanize:</p>"},{"location":"projects/arquitetura/#ambiente-e-pre-requisitos","title":"Ambiente e Pr\u00e9-requisitos","text":"<p>Para rodar o projeto \u00e9 fundamental ter algumas depend\u00eancias globais:</p> <ul> <li>Node</li> <li>Miniconda/Python</li> </ul> <p>Para visualizar vers\u00f5es, links e as instru\u00e7\u00f5es completas de configura\u00e7\u00e3o do ambiente: Ambiente e Pr\u00e9-requisitos</p>"},{"location":"projects/arquitetura/#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Ap\u00f3s configurar o Ambiente e Pr\u00e9-requisitos, em um diret\u00f3rio de sua m\u00e1quina, abra o terminal e execute:</p> <pre><code>git clone https://github.com/unb-mds/2024-2-Urbanize.git\n</code></pre> <p>Com o reposit\u00f3rio do backend devidamente clonado, voc\u00ea ter\u00e1 acesso \u00e0 aplica\u00e7\u00e3o Express e ao Scraper:</p>"},{"location":"projects/arquitetura/#expressapi","title":"Express/API","text":"<p>Navegue at\u00e9 o diret\u00f3rio raiz do reposit\u00f3rio clonado:</p> <pre><code>cd 2024-2-Urbanize\n</code></pre> <p>Em seguida instale as depend\u00eancias do Urbanize:</p> <pre><code>npm install\n</code></pre>"},{"location":"projects/arquitetura/#scraper","title":"Scraper","text":"<p>Navegue at\u00e9 o diret\u00f3rio <code>WebScrapper</code>:</p> <pre><code>cd WebScrapper\n</code></pre> <p>Crie um ambiente virtual com conda:</p> <pre><code>conda create --name &lt;my-env&gt;\n</code></pre> <p>Ative o ambiente criado:</p> <pre><code>conda activate &lt;my-env&gt;\n</code></pre> <p>Instale as depend\u00eancias e bibliotecas dentro do ambiente virtual:</p> <pre><code>conda install --yes --file requirements.txt\n</code></pre> <p>O script ETL acessa o banco de dados por meio de um <code>.env</code> encontrado no caminho <code>WebScrapper/DataETL/.env</code>. A sua estrutura est\u00e1 escrita abaixo:</p> <pre><code>DATABASE_USERNAME=&lt;INSERIR AQUI&gt;\nDATABASE_PASSWORD=&lt;INSERIR AQUI&gt;\nDATABASE_NAME=&lt;INSERIR AQUI&gt;\nDATABASE_PORT=&lt;INSERIR AQUI&gt;\nDATABASE_HOST=&lt;INSERIR AQUI&gt;\n</code></pre>"},{"location":"projects/arquitetura/#execucao","title":"\u2699\ufe0f Execu\u00e7\u00e3o","text":""},{"location":"projects/arquitetura/#expressapi_1","title":"Express/API","text":"<p>Para executar a aplica\u00e7\u00e3o Express em sua m\u00e1quina, execute no diret\u00f3rio raiz:</p> <pre><code>npm run start\n</code></pre> <p>O servidor ser\u00e1 inicializado e estar\u00e1 dispon\u00edvel na porta 3001 do localhost:</p> <pre><code>http://localhost:3333/\n</code></pre> <p>Demais comandos para execu\u00e7\u00e3o de testes, builds e linter podem ser encontrados na guia scripts  do arquivo <code>package.json</code> na pasta raiz.</p> <p>Com a api rodando localmente \u00e9 poss\u00edvel acessar sua documenta\u00e7\u00e3o e test\u00e1-la no Swagger, basta acessar:</p> <pre><code>http://localhost:3001/api-docs\n</code></pre>"},{"location":"projects/arquitetura/#scraper_1","title":"Scraper","text":"<p>Com o ambiente ativado como instru\u00eddo acima, para extrair os dados do Oracle Data com o selenium execute:</p> <pre><code>DataScraper/InepScrapper.py\n</code></pre>"},{"location":"projects/arquitetura/#etl","title":"ETL","text":"<p>Para tratar e carregar os dados extra\u00eddos, em modo debugger, acesse <code>WebScrapper/DataETL</code>, lembre-se de selecionar o ambiente conda que foi criado, e ent\u00e3o para rodar o programa por partes, execute:</p> <pre><code>ETLDebugger.ipynb\n</code></pre> <p>Se preferir, e n\u00e3o precisar/quiser rodar em modo debugger(por partes), execute o c\u00f3digo para produ\u00e7\u00e3o:</p> <pre><code>python3 WebSrapper/DataETL/main.py\n</code></pre>"},{"location":"projects/arquitetura/#guia-de-contribuicao","title":"Guia de contribui\u00e7\u00e3o","text":"<p>Para acessar o guia completo de contribui\u00e7\u00e3o: Guia de Contribui\u00e7\u00e3o</p>"},{"location":"projects/arquitetura/#documentacao","title":"Documenta\u00e7\u00e3o","text":"<p>Para acessar a documenta\u00e7\u00e3o completa: Documenta\u00e7\u00e3o Urbanize</p> <p>Nela, voc\u00ea encontra os seguintes t\u00f3picos:</p> <ul> <li>In\u00edcio</li> <li>Sprints</li> <li>Projeto:<ul> <li>Personas</li> <li>StoryMap</li> <li>Requisitos</li> <li>EAP</li> <li>API</li> <li>Arquitetura e Tecnologias</li> <li>Prot\u00f3tipo</li> </ul> </li> <li>Como contribuir:<ul> <li>Ambiente de desenvolvimento</li> <li>Primeiros passos - frotend</li> <li>Primeiros passos - backend</li> </ul> </li> <li>Sobre</li> </ul>"},{"location":"sprints/sprint-0/","title":"Sprint 0","text":"<p>Per\u00edodo: 05/11/2024 a 09/11/2024</p>"},{"location":"sprints/sprint-0/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Nesta Sprint, o grupo determinou que as reuni\u00f5es semanais acontecer\u00e3o \u00e0s s\u00e1bado, \u00e0s 10:00, remotamente, adicionalmente ter\u00e1 dailys no teams \u00e0s 21:00. foi designado o \"Coelho da Semana\", encarregado de estudar o git, que ainda nessa sprint, fez uma reuni\u00e3o de nivelamento sobre o tema. Por fim, foram estabelecidos o tema da aplica\u00e7\u00e3o, os requisitos iniciais e os objetivos a serem alcan\u00e7ados, al\u00e9m de uma breve descri\u00e7\u00e3o das tecnologias a serem utilizadas.</p>"},{"location":"sprints/sprint-0/#objetivos","title":"Objetivos","text":"<ul> <li>Defini\u00e7\u00e3o dos hor\u00e1rios das reuni\u00f5es semanais</li> <li>Estudar Git e GitHub</li> <li>Estudar Scrum</li> <li>Definir tema da aplica\u00e7\u00e3o</li> <li>Definir requisitos iniciais</li> <li>Definir tecnologias utilizadas</li> <li>Estudar Docker</li> </ul>"},{"location":"sprints/sprint-0/#reunioes","title":"Reuni\u00f5es","text":""},{"location":"sprints/sprint-0/#reuniao-1","title":"Reuni\u00e3o 1","text":"<p>Data: 05/11/2024</p> <p>Local: Teams</p> <p>Ata:</p> <p>Nessa reuni\u00e3o, o time definiu o tema e idealizou as tecnologias a serem utilizadas, bem como a estrutura do projeto. Foi definido tamb\u00e9m o coelho da semana:</p> <ul> <li>Git, GitHub (Gabriel)</li> </ul> <p>Aplica\u00e7\u00e3o web:  - Frontend: Next.js (Typescript e Tailwind)  - Backend: Express.js</p>"},{"location":"sprints/sprint-0/#reuniao-2","title":"Reuni\u00e3o 2","text":"<p>Data: 10/11/2024</p> <p>Local: Teams</p> <p>Ata:</p> <p>Na segunda reuni\u00e3o, o time definiu que as reuni\u00f5es semanais ser\u00e3o realizadas aos s\u00e1bados de forma remota \u00e0s 10 horas. Ademais, foi feito um nivelamento sobre github e git pelo coelho.</p>"},{"location":"sprints/sprint-0/#finalizacao","title":"Finaliza\u00e7\u00e3o","text":"<p>O time conseguiu realizar todos os objetivos propostos para a Sprint.</p>"},{"location":"sprints/sprint-1/","title":"Sprint 1","text":"<p>Per\u00edodo: 12/11/2024 a 17/11/2024</p>"},{"location":"sprints/sprint-1/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Nesta Sprint, o grupo determinou suas tecnologias e deram inicio ao estudo delas.</p>"},{"location":"sprints/sprint-1/#objetivos","title":"Objetivos","text":"<ul> <li>Defini\u00e7\u00e3o arquitetura </li> <li>Estudar scrapping</li> <li>Definir prototipo das pages</li> <li>Definir tecnologias</li> </ul>"},{"location":"sprints/sprint-1/#reunioes","title":"Reuni\u00f5es","text":""},{"location":"sprints/sprint-1/#reuniao-1","title":"Reuni\u00e3o 1","text":"<p>Data: </p>"},{"location":"sprints/sprint-1/#reuniao-2","title":"Reuni\u00e3o 2","text":""},{"location":"sprints/sprint-1/#data","title":"Data:","text":""},{"location":"sprints/sprint-1/#finalizacao","title":"Finaliza\u00e7\u00e3o","text":""}]}